import { Kysely, sql } from 'kysely';

export async function up(db: Kysely<any>): Promise<void> {
  // sql generated by `npx @better-auth/cli generate`
  await sql`
    create table "user" ("id" text not null primary key, "name" text not null, "email" text not null unique, "emailVerified" integer not null, "image" text, "createdAt" date not null, "updatedAt" date not null);
  `.execute(db);
  await sql`
    create table "session" ("id" text not null primary key, "expiresAt" date not null, "token" text not null unique, "createdAt" date not null, "updatedAt" date not null, "ipAddress" text, "userAgent" text, "userId" text not null references "user" ("id"));
  `.execute(db);
  await sql`
    create table "account" ("id" text not null primary key, "accountId" text not null, "providerId" text not null, "userId" text not null references "user" ("id"), "accessToken" text, "refreshToken" text, "idToken" text, "accessTokenExpiresAt" date, "refreshTokenExpiresAt" date, "scope" text, "password" text, "createdAt" date not null, "updatedAt" date not null);
  `.execute(db);
  await sql`
    create table "verification" ("id" text not null primary key, "identifier" text not null, "value" text not null, "expiresAt" date not null, "createdAt" date, "updatedAt" date);
  `.execute(db);

  // example for creating table with query builder
  // await db.schema
  // .createTable('user')
  // .addColumn('id', 'integer', (col) =>
  //   col.primaryKey().autoIncrement().notNull(),
  // )
  // .addColumn('email', 'text', (col) => col.notNull().unique())
  // .addColumn('password_hash', 'text', (col) => col.notNull())
  // .addColumn('updated_at', 'datetime', (col) =>
  //   col.notNull().defaultTo(sql`CURRENT_TIMESTAMP`),
  // )
  // .addColumn('created_at', 'datetime', (col) =>
  //   col.notNull().defaultTo(sql`CURRENT_TIMESTAMP`),
  // )
  // .execute();
}

export async function down(db: Kysely<any>): Promise<void> {
  await db.schema.dropTable('user').execute();
  await db.schema.dropTable('session').execute();
  await db.schema.dropTable('account').execute();
  await db.schema.dropTable('verification').execute();
}

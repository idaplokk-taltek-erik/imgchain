/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as AuthenticatedIndexImport } from './routes/_authenticated/index'
import { Route as AuthenticatedUploadTestIndexImport } from './routes/_authenticated/upload-test/index'
import { Route as AuthenticatedProfileIndexImport } from './routes/_authenticated/profile/index'
import { Route as AuthenticatedSendHashImport } from './routes/_authenticated/send.$hash'

// Create/Update Routes

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedIndexRoute = AuthenticatedIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedUploadTestIndexRoute =
  AuthenticatedUploadTestIndexImport.update({
    id: '/upload-test/',
    path: '/upload-test/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedProfileIndexRoute = AuthenticatedProfileIndexImport.update({
  id: '/profile/',
  path: '/profile/',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedSendHashRoute = AuthenticatedSendHashImport.update({
  id: '/send/$hash',
  path: '/send/$hash',
  getParentRoute: () => AuthenticatedRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/send/$hash': {
      id: '/_authenticated/send/$hash'
      path: '/send/$hash'
      fullPath: '/send/$hash'
      preLoaderRoute: typeof AuthenticatedSendHashImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/profile/': {
      id: '/_authenticated/profile/'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof AuthenticatedProfileIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/upload-test/': {
      id: '/_authenticated/upload-test/'
      path: '/upload-test'
      fullPath: '/upload-test'
      preLoaderRoute: typeof AuthenticatedUploadTestIndexImport
      parentRoute: typeof AuthenticatedImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedRouteChildren {
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute
  AuthenticatedSendHashRoute: typeof AuthenticatedSendHashRoute
  AuthenticatedProfileIndexRoute: typeof AuthenticatedProfileIndexRoute
  AuthenticatedUploadTestIndexRoute: typeof AuthenticatedUploadTestIndexRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
  AuthenticatedSendHashRoute: AuthenticatedSendHashRoute,
  AuthenticatedProfileIndexRoute: AuthenticatedProfileIndexRoute,
  AuthenticatedUploadTestIndexRoute: AuthenticatedUploadTestIndexRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof AuthenticatedRouteWithChildren
  '/': typeof AuthenticatedIndexRoute
  '/send/$hash': typeof AuthenticatedSendHashRoute
  '/profile': typeof AuthenticatedProfileIndexRoute
  '/upload-test': typeof AuthenticatedUploadTestIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof AuthenticatedIndexRoute
  '/send/$hash': typeof AuthenticatedSendHashRoute
  '/profile': typeof AuthenticatedProfileIndexRoute
  '/upload-test': typeof AuthenticatedUploadTestIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/_authenticated/': typeof AuthenticatedIndexRoute
  '/_authenticated/send/$hash': typeof AuthenticatedSendHashRoute
  '/_authenticated/profile/': typeof AuthenticatedProfileIndexRoute
  '/_authenticated/upload-test/': typeof AuthenticatedUploadTestIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '' | '/' | '/send/$hash' | '/profile' | '/upload-test'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/send/$hash' | '/profile' | '/upload-test'
  id:
    | '__root__'
    | '/_authenticated'
    | '/_authenticated/'
    | '/_authenticated/send/$hash'
    | '/_authenticated/profile/'
    | '/_authenticated/upload-test/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_authenticated"
      ]
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/",
        "/_authenticated/send/$hash",
        "/_authenticated/profile/",
        "/_authenticated/upload-test/"
      ]
    },
    "/_authenticated/": {
      "filePath": "_authenticated/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/send/$hash": {
      "filePath": "_authenticated/send.$hash.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/profile/": {
      "filePath": "_authenticated/profile/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/upload-test/": {
      "filePath": "_authenticated/upload-test/index.tsx",
      "parent": "/_authenticated"
    }
  }
}
ROUTE_MANIFEST_END */
